<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--映射具体interface-->
<mapper namespace="com.benjamin.dao.DepartmentDao">

    <!--
    结果Map
    collection：当前对象映射关联集合
        property：对象字段名称
        column：数据表字段名称
        ofType：集合对象类型名称（Employee）
        javaType：集合类型（ArrayList）

        id：关联集合对象的主键id
        result：非主键id
    -->
    <resultMap id="department" type="com.benjamin.bean.Department">
        <id property="id" column="d_id"/>
        <result property="dname" column="dname"/>
        <collection property="employees" ofType="com.benjamin.bean.Employee">
            <id property="id" column="id"/>
            <result property="name" column="name"/>
            <result property="phone" column="phone"/>
            <result property="identity" column="identity"/>
        </collection>
    </resultMap>

    <!--
    select
    id：接口下的方法名称
    resultType：结果返回用对象类型
    resultMap：结果返回用Map类型
    flushCache：语句被调用，会清空缓存
    useCache：语句被调用，会使用缓存，select元素默认true
    timeout：数据库返回超出设定秒数，抛异常
    statementType：
         STATEMENT：拼接，存在sql注入。对查询语句、传入参数
         PREPARED：预编译，不会sql注入。对查询语句进行预编译，语句带"？"
         CALLABLE：存储过程

    注意：
        在关联查询时，主表与关联表主键名称均为id时，会导致出现一条结果的情况
    -->
    <select id="findById" resultMap="department">
        select
        d.id d_id,
        d.dname,
        e.* from t_department d
        LEFT JOIN t_employee e on d.id = e.department_id
        where d.id = #{id}
    </select>

    <!--仅查询department数据-->
    <select id="findByIdSelect" resultType="com.benjamin.bean.Department">
        SELECT * from t_department WHERE id = #{id}
    </select>

    <!--
    查询所有，返回集合resultType选择对象类型即可
    -->
    <select id="findAll" resultType="com.benjamin.bean.Department">
        select * from t_department
    </select>

    <!--
    insert, update, delete
    id：接口下的方法名称
    flushCache：语句被调用，会清空缓存
    timeout：数据库返回超出设定秒数，抛异常
    statementType：
         STATEMENT：拼接，存在sql注入。对查询语句、传入参数
         PREPARED：预编译，不会sql注入。对查询语句进行预编译，语句带"？"
         CALLABLE：存储过程
    useGeneratedKeys：使用数据库自增主键。MyBatis 使用 JDBC 的 getGeneratedKeys 方法来取出由数据库内部生成的主键
    keyProperty：数据库自增主键返回并赋值。一般与useGeneratedKeys同用，把自增主键值设置到返回对象属性中（如：id）

    问题：#{}与${}的区别？
    #{}：预编译方式
    ${}：拼接方式
    -->
    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into t_department (dname)
        values (#{dname})
    </insert>

</mapper>